{"version":3,"file":"UpgradeScalaTestAssertions.js","sourceRoot":"","sources":["UpgradeScalaTestAssertions.ts"],"names":[],"mappings":"AAEA,qEAAgF;AAMrE,QAAA,0BAA0B,GAAa;IAC9C,WAAW,EAAE,+BAA+B;IAC5C,IAAI,EAAE,4BAA4B;IAClC,UAAU,EAAE,EACX;IACD,OAAO,EAAP,UAAQ,QAAkB,EAAE,CAAa;QACrC,GAAG,CAAC,CAAU,UAAmB,EAAnB,KAAA,QAAQ,CAAC,QAAQ,EAAE,EAAnB,cAAmB,EAAnB,IAAmB;YAA5B,IAAI,CAAC,SAAA;YACR,CAAC,CAAC,QAAQ,CAAC,4BAA4B,EAAE,EAAE,CAAC,CAAA;SAC7C;QACD,MAAM,CAAC,IAAI,qBAAM,CAAC,qBAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IAC1C,CAAC;CACL,CAAA","sourcesContent":["import { Executor } from \"@atomist/rug/operations/Executor\"\r\nimport { Services } from \"@atomist/rug/model/Core\"\r\nimport { Result, Status, Parameter } from \"@atomist/rug/operations/RugOperation\"\r\n\r\ninterface Parameters {\r\n\r\n}\r\n\r\nexport let upgradeScalaTestAssertions: Executor = {\r\n    description: \"Upgrades ScalaTest assertions\",\r\n    name: \"UpgradeScalaTestAssertions\",\r\n    parameters: [\r\n    ],\r\n    execute(services: Services, p: Parameters): Result {\r\n        for (let s of services.services()) {\r\n          s.editWith(\"UpgradeScalaTestAssertions\", {})\r\n        }\r\n        return new Result(Status.Success, \"OK\")\r\n     }\r\n}\r\n"]}