scenario MakeRugLanguageExtension should create the files needed for a Rug language extension

let elm_type_file = "src/main/scala/com/jessitron/rug/kind/elm/ElmType.scala"
let typed_file = "src/main/resources/META-INF/services/com.atomist.rug.spi.Typed"
let test_file = "src/test/scala/com/jessitron/rug/kind/elm/ElmTypeTest.scala"


given
  pom.xml = """<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>something</groupId>
    <artifactId>else</artifactId>
    <version>0.13.0</version>
  <dependencies>
        <dependency>
            <groupId>com.atomist</groupId>
            <artifactId>artifact-source</artifactId>
            <version>0.14.4</version>
        </dependency>
      </dependencies>
      </project>"""


when
  MakeRugLanguageExtension type_name="Elm", package="com.jessitron.rug.kind.elm"

then
  fileContains "pom.xml" "artifactId>rug<"
  and fileExists elm_type_file
    and fileContains elm_type_file "class ElmType"
    and fileContains elm_type_file "package com.jessitron.rug.kind.elm"
  and fileExists typed_file
    and fileContains typed_file "com.jessitron.rug.kind.elm.ElmType"
  and fileExists test_file
    and fileContains test_file "class ElmTypeTest"
    and fileContains test_file "package com.jessitron.rug.kind.elm"
